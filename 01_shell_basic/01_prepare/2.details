内核，程序，进程，shell

内核
内核就是操作系统，严格意义上的Linux就是指Linux内核，它为进程提供运行环境。平常所说的Linux 准确地说应该叫做GNU/Linux，也就是说Linux是一个由许许多多的GNU软件，加上Linux内核，组成的一个操作环境。用户不会直接使用操作系统（内核），用户使用的是应用程序，应用程序
负责和内核（操作系统）交互。 


用户不会直接使用操作系统，用户使用的是应用程序，应用程序代替用户去使用操作系统。



程序
程序是存储在电脑上的文件。用户使用电脑来完成某种任务，实际上就是运行某个程序，由程序代替用户去完成任务。 


进程
进程是运行中的程序。当用户要运行某个程序时，内核会把该程序文件读入内存，然后执行其中的指令，在内存中的这个程序就是所谓的进程。一个程序可以被同时运行多次，产生的进程虽然有多个，但都来源于同一个程序。


Shell
Shell 是一个程序，它处于内核和用户的中间，充当用户和内核之间的桥梁角色。当shell 程序在终端运行时，会等待用户输入命令，用户输入命令后，shell 就负责执行该命令。Linux 系统管理员大多数时间都是面对着shell，在红帽Linux 中，默认的shell 程序名字叫做bash。

当用户运行了图形界面的终端程序（比如红帽里的 gnome-terminal，Kubuntu 里的Konsole）后，终端程序一般会自动运行某个shell 程序，这个shell 程序通常是 bash，bash 也叫 bash shell。





Linux下的目录组织法，路径表示法，以及常见的系统目录

目录组织法
Linux系统中，数据和程序以文件的形式存储在存储介质上（通常是磁盘），文件被归类存放到目录中（Windows中称之为文件夹）。一个目录中可以包含文件和其它目录，这样就形成了一个多层次的结构，这种结构常被称为目录树 (directory tree)。
Linux目录树的根部是一个用斜杠"/" 来表示的目录，它被称作根目录(root directory)，系统中其它所有的目录和文件都在其下，要么直接在其下，要么间接在其下。

cd: change directory, 改变当前工作目录
pwd: print working directory, 打印出当前的工作目录
ls: list, 列出目录的内容


路径表示法
既然数据和程序是以文件的形式存储，那么，当要运行某个程序(bash, ls, firefox, stardict, gedit)，或者读取某些数据（音乐，电影，图片，文本，等等）时，就要用某种方法来表示相应的文件的位置，在Linux 下，用“路径”的方法来表示。有两种方式：
绝对路径：相对于根目录，比如 /bin/bash, /home/czl/.bashrc
相对路径：相对于当前工作目录，比如 .bashrc, bin/backup, ../usr/local/bin/msmtp

这和平常表示某个地理位置的方法是相通的。



Linux 几个重要的目录，以及几个特殊目录表示法：
    /
    /bin                <-- binary
    /usr/bin
    /usr/local/bin
    /sbin
    /usr/sbin
    /usr/local/sbin
    /dev                <-- device
    /etc                <-- 存放程序的配置文件
    /home
    /media              <-- 临时挂载点
    /mnt                <-- 临时挂载点
    /proc               <-- 存放进程的相关信息
    /root               <-- root 用户的家目录
    /sys
    /tmp                <-- temporary，存放程序的临时文件
    /var

    ..   代表上一层目录（父目录）
    .    代表当前目录
    ~    代表当前用户的家目录
    ~abc 代表用户abc 的家目录

英文描述 root directory 指的是斜杠/ （根目录），而不是指root 用户的家目录
程序所存放的目录名字中，通常有bin 这三个字符，bin 就是binary 的意思



思考
以下命令列出的是哪个目录的内容？这种路径表示法是绝对路径还是相对路径？
ls /usr/local/bin/../../share/man/



操作目录和文件的几个命令
cd: change directory, 改变当前目录，也就是进到某个目录里
    cd abc      <-- 进入当前目录下的abc 目录
    cd /tmp     <-- 进入根目录下的tmp 目录
    cd -        <-- 进入上一次的工作目录
    cd ..       <-- 回到上一层目录（父目录）
    cd          <-- 回到家目录

ls: list, 列出目录的内容
pwd: print working directory, 打印出当前的工作目录
cat: concatenate, 连接若干文件，并显示到屏幕上


